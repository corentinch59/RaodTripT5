//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Keybinds/KeyMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KeyMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KeyMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KeyMap"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""3d7b77de-dc7f-467e-813c-21e121f105b6"",
            ""actions"": [
                {
                    ""name"": ""Dynamo"",
                    ""type"": ""Value"",
                    ""id"": ""7245b6e2-3d5a-4d36-b5b1-412b21e10e55"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Wiper"",
                    ""type"": ""Value"",
                    ""id"": ""32884280-6bdd-4ee7-890e-78e4e632fece"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PhoneCall"",
                    ""type"": ""Button"",
                    ""id"": ""2d1d7e2c-a19b-4623-9b5e-c193a5f34bb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ENG binds"",
                    ""id"": ""5d0b05a0-1820-4eca-bdbd-f63b572cc9b8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dynamo"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3bcca14e-657b-4f5f-8480-6e6a3b751326"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dynamo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ec71577c-bada-476c-9ae0-6beebfdaffe5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dynamo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e090e07f-78b4-4e0d-94db-8a0c5bfe3626"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dynamo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""40ea11fe-164b-4157-9abf-41146820c3d6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dynamo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""78fe7823-dd4e-4e89-98ba-4fd887e9a05e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wiper"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d61758c2-1392-4a6d-bff1-ce628d91218f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wiper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""04b976be-2770-4d16-9ed8-4e18e1733e6f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wiper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""783954ea-dd2c-40f8-a68a-82d135dbf14e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wiper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e7b6e2f2-311d-4599-bf52-958b854fcda3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wiper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9a8fa9d6-3575-449e-9307-0c50aee5533c"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PhoneCall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls_Dynamo = m_PlayerControls.FindAction("Dynamo", throwIfNotFound: true);
        m_PlayerControls_Wiper = m_PlayerControls.FindAction("Wiper", throwIfNotFound: true);
        m_PlayerControls_PhoneCall = m_PlayerControls.FindAction("PhoneCall", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private List<IPlayerControlsActions> m_PlayerControlsActionsCallbackInterfaces = new List<IPlayerControlsActions>();
    private readonly InputAction m_PlayerControls_Dynamo;
    private readonly InputAction m_PlayerControls_Wiper;
    private readonly InputAction m_PlayerControls_PhoneCall;
    public struct PlayerControlsActions
    {
        private @KeyMap m_Wrapper;
        public PlayerControlsActions(@KeyMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dynamo => m_Wrapper.m_PlayerControls_Dynamo;
        public InputAction @Wiper => m_Wrapper.m_PlayerControls_Wiper;
        public InputAction @PhoneCall => m_Wrapper.m_PlayerControls_PhoneCall;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Add(instance);
            @Dynamo.started += instance.OnDynamo;
            @Dynamo.performed += instance.OnDynamo;
            @Dynamo.canceled += instance.OnDynamo;
            @Wiper.started += instance.OnWiper;
            @Wiper.performed += instance.OnWiper;
            @Wiper.canceled += instance.OnWiper;
            @PhoneCall.started += instance.OnPhoneCall;
            @PhoneCall.performed += instance.OnPhoneCall;
            @PhoneCall.canceled += instance.OnPhoneCall;
        }

        private void UnregisterCallbacks(IPlayerControlsActions instance)
        {
            @Dynamo.started -= instance.OnDynamo;
            @Dynamo.performed -= instance.OnDynamo;
            @Dynamo.canceled -= instance.OnDynamo;
            @Wiper.started -= instance.OnWiper;
            @Wiper.performed -= instance.OnWiper;
            @Wiper.canceled -= instance.OnWiper;
            @PhoneCall.started -= instance.OnPhoneCall;
            @PhoneCall.performed -= instance.OnPhoneCall;
            @PhoneCall.canceled -= instance.OnPhoneCall;
        }

        public void RemoveCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);
    public interface IPlayerControlsActions
    {
        void OnDynamo(InputAction.CallbackContext context);
        void OnWiper(InputAction.CallbackContext context);
        void OnPhoneCall(InputAction.CallbackContext context);
    }
}
